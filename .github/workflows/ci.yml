name: CI

on:
  push:
    branches: [main, develop, copilot/**]
  pull_request:
    branches: [main, develop]

jobs:
  lint-and-build:
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        node-version: [20.x]
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Build shared package
        run: cd packages/shared && npm run build

      - name: Lint code
        run: npm run lint || true

      - name: Generate Prisma client
        run: cd apps/api && npx prisma generate

      - name: Build API
        run: cd apps/api && npm run build

      - name: Build Web
        run: cd apps/web && npm run build

      - name: Build Worker
        run: cd apps/worker && npm run build

  # test:
  #   runs-on: ubuntu-latest
  #   needs: lint-and-build
    
  #   services:
  #     postgres:
  #       image: postgres:16-alpine
  #       env:
  #         POSTGRES_PASSWORD: postgres
  #         POSTGRES_DB: test_db
  #       options: >-
  #         --health-cmd pg_isready
  #         --health-interval 10s
  #         --health-timeout 5s
  #         --health-retries 5
  #       ports:
  #         - 5432:5432
    
  #   steps:
  #     - name: Checkout code
  #       uses: actions/checkout@v4

  #     - name: Setup Node.js
  #       uses: actions/setup-node@v4
  #       with:
  #         node-version: 20.x
  #         cache: 'npm'

  #     - name: Install dependencies
  #       run: npm ci

  #     - name: Run tests
  #       run: npm run test
  #       env:
  #         DATABASE_URL: postgresql://postgres:postgres@localhost:5432/test_db
