version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:16-alpine
    container_name: sms-postgres
    environment:
      POSTGRES_DB: school_management
      POSTGRES_USER: sms_user
      POSTGRES_PASSWORD: sms_password
      TZ: Africa/Monrovia
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U sms_user -d school_management"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Redis
  redis:
    image: redis:7-alpine
    container_name: sms-redis
    environment:
      TZ: Africa/Monrovia
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Mailhog (for development email testing)
  mailhog:
    image: mailhog/mailhog:latest
    container_name: sms-mailhog
    environment:
      TZ: Africa/Monrovia
    ports:
      - "1025:1025"  # SMTP
      - "8025:8025"  # Web UI
    healthcheck:
      test: ["CMD", "wget", "--quiet", "--tries=1", "--spider", "http://localhost:8025"]
      interval: 10s
      timeout: 5s
      retries: 5

  # API Service
  api:
    build:
      context: .
      dockerfile: apps/api/Dockerfile
    container_name: sms-api
    environment:
      NODE_ENV: development
      TZ: Africa/Monrovia
      DATABASE_URL: postgresql://sms_user:sms_password@postgres:5432/school_management?schema=public
      REDIS_URL: redis://redis:6379
      JWT_SECRET: dev-secret-change-in-production
      PORT: 4000
      SMTP_HOST: mailhog
      SMTP_PORT: 1025
      CORS_ORIGIN: http://localhost:3000
      FRONTEND_URL: http://localhost:3000
    ports:
      - "4000:4000"
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
      mailhog:
        condition: service_healthy
    volumes:
      - ./apps/api:/app/apps/api
      - ./packages/shared:/app/packages/shared
      - api_uploads:/app/apps/api/uploads
    command: >
      sh -c "
        cd /app/apps/api &&
        npx prisma migrate deploy &&
        npx prisma db seed &&
        npm run dev
      "
    healthcheck:
      test: ["CMD", "wget", "--quiet", "--tries=1", "--spider", "http://localhost:4000/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Web Service
  web:
    build:
      context: .
      dockerfile: apps/web/Dockerfile
    container_name: sms-web
    environment:
      NODE_ENV: development
      TZ: Africa/Monrovia
      NEXT_PUBLIC_API_URL: http://localhost:4000
    ports:
      - "3000:3000"
    depends_on:
      api:
        condition: service_healthy
    volumes:
      - ./apps/web:/app/apps/web
      - ./packages/shared:/app/packages/shared
    command: npm run dev

  # Worker Service
  worker:
    build:
      context: .
      dockerfile: apps/worker/Dockerfile
    container_name: sms-worker
    environment:
      NODE_ENV: development
      TZ: Africa/Monrovia
      DATABASE_URL: postgresql://sms_user:sms_password@postgres:5432/school_management?schema=public
      REDIS_URL: redis://redis:6379
      SMTP_HOST: mailhog
      SMTP_PORT: 1025
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
      mailhog:
        condition: service_healthy
    volumes:
      - ./apps/worker:/app/apps/worker
      - ./packages/shared:/app/packages/shared
    command: npm run dev

volumes:
  postgres_data:
  redis_data:
  api_uploads:
