services:
  # PostgreSQL Database
  - type: pserv
    name: school-db
    env: docker
    plan: starter
    region: oregon
    envVars:
      - key: POSTGRES_USER
        value: school
      - key: POSTGRES_PASSWORD
        generateValue: true
      - key: POSTGRES_DB
        value: school_db
      - key: TZ
        value: Africa/Monrovia

  # Redis
  - type: redis
    name: school-redis
    plan: starter
    region: oregon
    maxmemoryPolicy: allkeys-lru

  # API Service
  - type: web
    name: school-api
    env: node
    plan: starter
    region: oregon
    buildCommand: npm install && npm run build -- --filter=@school/api
    startCommand: cd apps/api && npx prisma migrate deploy && npx prisma db seed && npm start
    envVars:
      - key: NODE_ENV
        value: production
      - key: TZ
        value: Africa/Monrovia
      - key: DATABASE_URL
        fromDatabase:
          name: school-db
          property: connectionString
      - key: REDIS_URL
        fromService:
          name: school-redis
          type: redis
          property: connectionString
      - key: JWT_SECRET
        generateValue: true
      - key: JWT_REFRESH_SECRET
        generateValue: true
      - key: JWT_EXPIRES_IN
        value: 15m
      - key: JWT_REFRESH_EXPIRES_IN
        value: 7d
      - key: SEED_ADMIN_EMAIL
        value: admin@school.local
      - key: SEED_ADMIN_PASSWORD
        sync: false
      - key: SMTP_HOST
        sync: false
      - key: SMTP_PORT
        value: 587
      - key: SMTP_SECURE
        value: true
      - key: SMTP_USER
        sync: false
      - key: SMTP_PASSWORD
        sync: false
      - key: SMTP_FROM
        value: noreply@school.local
      - key: API_PORT
        value: 4000
      - key: API_HOST
        value: 0.0.0.0

  # Web Service
  - type: web
    name: school-web
    env: node
    plan: starter
    region: oregon
    buildCommand: npm install && npm run build -- --filter=@school/web
    startCommand: cd apps/web && npm start
    envVars:
      - key: NODE_ENV
        value: production
      - key: TZ
        value: Africa/Monrovia
      - key: NEXT_PUBLIC_API_URL
        fromService:
          name: school-api
          type: web
          property: host

  # Worker Service
  - type: worker
    name: school-worker
    env: node
    plan: starter
    region: oregon
    buildCommand: npm install && npm run build -- --filter=@school/worker
    startCommand: cd apps/worker && npm start
    envVars:
      - key: NODE_ENV
        value: production
      - key: TZ
        value: Africa/Monrovia
      - key: REDIS_URL
        fromService:
          name: school-redis
          type: redis
          property: connectionString
      - key: SMTP_HOST
        sync: false
      - key: SMTP_PORT
        value: 587
      - key: SMTP_SECURE
        value: true
      - key: SMTP_USER
        sync: false
      - key: SMTP_PASSWORD
        sync: false
      - key: SMTP_FROM
        value: noreply@school.local
      - key: WORKER_CONCURRENCY
        value: 5
